To input the LC-values to verify
for i = 0 to Number of Processes do {
  print the LC values for process N
  for j = 0 to Number of Events do {
    Enter the LC values
      if LC values != 0 {
        LC Value = LC value input
        
To show the LC value input
for i = 0 to Number of Processes do {
  for j = 0 to Number of Events do {
     print the events of each Process with its LC value
     
To input the Events to verify
for i = 0 to Number of Processes do {
  for j = 0 to Number of Events do {
     Input the event for each processes
       if event input != "NULL"
         The given event = event input

To show events to verify
for i = 0 to Number of Processes do {
  for j = 0 to Number of Events do {
     print the events of each Process
     
Label 'r'
for i = 0 to Number of Processes do {
  for j = 0 to all the Events do {
     if LC value != current LC value being checked + 1  
       Label the event 'r'
       
Label 's'
for i = 0 to Number of Processes do {
  for j = 0 to all the Events do {
    for k = 0 to a receive_count do {
       if LC value = receive_array[k] - 1
         Label the event 's'
         Reset receieve_array[k] to 100
         Resetting the receive array[k] so that only the first value of rcv_array[k] - 1 is the send event
         
Print label for given events
for i = 0 to Number of Processes do {
  for j = 0 to all the Events do {
      print the labels for events 
         
for i = 0 to Number of Processes do {
  for j = 0 to all the Events do {         
    if label = 's' {
      tmp = given_event[1]
      arg = atoi(tmp)
        create a send array
        send_array[arg] = LC Value       
    else if label = 'r' {
      tmp = given_event[1]
      arg = atoi(tmp)
        create a receive array
        receive_array[arg] = LC Value         
         
 for i = 1 to receive_count + 1 do {
   if receive_array[i] > send_array[i] {
     This is correct = false
     break out of loop
   if correct do {
     print out "CORRECT"
   else do {
     print out "INCORRECT"
   
return



         
         
      
